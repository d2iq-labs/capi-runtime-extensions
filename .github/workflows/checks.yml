# Copyright 2023 D2iQ, Inc. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

name: checks

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  merge_group:
    types:
      - checks_requested

permissions:
  contents: read

jobs:
  unit-test:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install asdf
        uses: asdf-vm/actions/setup@v2
        with:
          asdf_branch: v0.11.3

      - name: Run unit tests
        run: make test

      - name: Annotate tests
        if: always()
        uses: guyarb/golang-test-annotations@v0.6.0
        with:
          test-results: test.json

  e2e-test:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install asdf
        uses: asdf-vm/actions/setup@v2
        with:
          asdf_branch: v0.11.3

      - name: Build and install on KinD
        run: make dev.run-on-kind
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run e2e tests
        run: make e2e-test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup KinD cluster
        if: always()
        run: make kind.delete

  lint:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Gather tool versions
        uses: endorama/asdf-parse-tool-versions@v1
        id: versions

      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2
        with:
          fail_on_error: true
          reporter: github-pr-review
          golangci_lint_version: v${{ fromJson(steps.versions.outputs.tools).golangci-lint }}
          go_version: v${{ fromJson(steps.versions.outputs.tools).golang }}

  pre-commit:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Gather tool versions
        uses: endorama/asdf-parse-tool-versions@v1
        id: versions

      - uses: actions/setup-go@v4
        with:
          go-version: ${{ fromJson(steps.versions.outputs.tools).golang }}
          check-latest: false
          cache: true

      - uses: mfinelli/setup-shfmt@v2
        with:
          shfmt-version: ${{ fromJson(steps.versions.outputs.tools).shfmt }}

      - name: Install asdf
        uses: asdf-vm/actions/setup@v2
        with:
          asdf_branch: v0.11.3

      - name: Install helm-docs
        run: make install-tool.helm-docs

      - uses: pre-commit/action@v3.0.0
        with:
          extra_args: --all-files --show-diff-on-failure
        env:
          SKIP: no-commit-to-branch,golangci-lint

  lint-test-helm:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Gather tool versions
        uses: endorama/asdf-parse-tool-versions@v1
        id: versions

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v${{ fromJson(steps.versions.outputs.tools).helm }}

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2
        with:
          version: v${{ fromJson(steps.versions.outputs.tools).helm-ct }}
          yamllint_version: ${{ fromJson(steps.versions.outputs.tools).yamllint }}

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - if: steps.list-changed.outputs.changed == 'true'
        name: Run chart-testing (lint)
        run: ct lint --config charts/ct-config.yaml

      - if: steps.list-changed.outputs.changed == 'true'
        name: Create kind cluster
        uses: helm/kind-action@v1
        with:
          version: v${{ fromJson(steps.versions.outputs.tools).kind }}
          kubectl_version: v${{ fromJson(steps.versions.outputs.tools).kubectl }}
          node_image: ghcr.io/mesosphere/kind-node:v${{ fromJson(steps.versions.outputs.tools).kubectl }}
        env:
          KUBECONFIG: ct-kind-kubeconfig

      - if: steps.list-changed.outputs.changed == 'true'
        name: Install asdf
        uses: asdf-vm/actions/setup@v2
        with:
          asdf_branch: v0.11.3

      - if: steps.list-changed.outputs.changed == 'true'
        name: Build Docker images
        run: make release-snapshot

      - if: steps.list-changed.outputs.changed == 'true'
        name: Sideload docker image
        run: kind load docker-image --name chart-testing "$(jq -r '.[] | select(.type == "Docker Image" and .goos == "linux" and .goarch == "amd64").name' dist/artifacts.json)"

      - if: steps.list-changed.outputs.changed == 'true'
        name: Setup Cluster API and cert-manager
        run: make clusterctl.init
        env:
          KIND_KUBECONFIG: ct-kind-kubeconfig

      - if: steps.list-changed.outputs.changed == 'true'
        name: Run chart-testing (install)
        run: ct install --config charts/ct-config.yaml --helm-extra-set-args "--set=image.tag=$(jq -r .version dist/metadata.json)"
        env:
          KUBECONFIG: ct-kind-kubeconfig
